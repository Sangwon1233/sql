

--전인하 학생의 생년월일중 연,월을 출력(YY-MM)
--DROP TABLE STUD_HEVY; 
--DROP TABLE STUD_101;
--DROP TABLE EX_TYPE ;


SELECT BIRTHDATE ,TO_CHAR(BIRTHDATE ,'YY-MM') 
FROM STUDENT
WHERE NAME = '전인하';

--'DAY MINTH DD YYYY' 형식으로 102번 학과 학생의 생년월일 출력
SELECT BIRTHDATE ,TO_CHAR(BIRTHDATE,'DAY MON DD YYYY') 
FROM STUDENT
WHERE DEPTNO =102;

--보직수당을 받는 교수들을 대상으로 수당과 급여를 더한 값에 12를 고밯여 ANULL이라는 이름으로
--연봉 계산을 하고 세 자리마다 쉼표로 표시하여라
SELECT NAME ,SAL,COMM ,TO_CHAR (SAL+COMM*12,'9,999')ANUAL
FROM PROFESSOR p 
WHERE COMM IS NOT NULL;

SELECT TO_NUMBER('1234'),
--		TO_NUMBER('ABCD'),
		TO_NUMBER('1,234','9,999') 
	FROM DUAL;

--학과 번호가
--101 컴퓨터공학과
--102 멀티미디어학과
--201 전자공학과
--나머지는 기계공학과

SELECT STUDNO
		,NAME
		,DEPTNO 
		,DECODE(DEPTNO
		,101,'컴퓨터공학과'
		,102,'멀티미디어학과'
		,201,'전자공학과'
		,'기계공학과')DNAME
FROM STUDENT;

--case문 교수의 소속학과에 따라 보너스 지급, 101학과일경우 급여의 10%,102학과는 20%,201학과는 30%나머지는
SELECT  
		PROFNO,
		NAME,
		SAL,
		DEPTNO,
		CASE
			WHEN DEPTNO =101 THEN SAL*0.1
			WHEN DEPTNO =102 THEN SAL*0.2
			WHEN DEPTNO =201 THEN SAL*0.3
			ELSE 0
		END BONUS,
		CASE DEPTNO
		WhEN 101 THEN SAL*0.1
		WhEN 102 THEN SAL*0.2
		WhEN 201 THEN SAL*0.3
		ELSE 0	
		END BONUS2	
FROM PROFESSOR p ;

SELECT CASE
			WHEN DEPTNO =101 THEN SAL*0.1
			WHEN DEPTNO =102 THEN SAL*0.2
			WHEN DEPTNO =201 THEN SAL*0.3
			ELSE 0
		END BONUS,
		CASE DEPTNO
		WHEN 101 THEN SAL*0.1
		WHEN 102 THEN SAL*0.2
		WHEN 201 THEN SAL*0.3
		ELSE 0	
		END BONUS2
FROM PROFESSOR p 



SELECT count(*) --대표적인 카운트 함수
FROM  STUDENT ;

SELECT count(DISTINCT DEPTNO) --중복된걸 뺸값
FROM  STUDENT ;

--그룹
-- 교수의 인원수를 조회
SELECT COUNT(*),COUNT(COMM),MAX(SAL),MIN(SAL)--같은 집계끼리 사용해야함 1행 유지 
FROM PROFESSOR p ;

SELECT COUNT(*) 
FROM PROFESSOR p 
WHERE COMM IS NOT  NULL;

--101학과 학생들의 몸무게 평균과 합계를 구하여라
SELECT COUNT(*),AVG(WEIGHT),SUM(WEIGHT)   
FROM STUDENT
WHERE DEPTNO =101;

--101학과 학생들의 몸무게 평균과 합계를 구하여라,또한 최대키 최소키를 구해라
SELECT COUNT(*),AVG(WEIGHT),SUM(WEIGHT),AVG(HEIGHT),SUM(HEIGHT) 
FROM STUDENT
WHERE DEPTNO =101;

--데이터 그룹 생성
SELECT COUNT(*) --칼럼을 그룹에서 뽑아서 셀렉에 안서도 된다
FROM STUDENT 
GROUP BY GRADE , DEPTNO

SELECT GRADE,DEPTNO, COUNT(*)
FROM STUDENT 
GROUP BY GRADE , DEPTNO
ORDER BY 1,2;

--학과 번호별 교수의 인원수를 조회
SELECT DEPTNO ,COUNT(*),COUNT(COMM) 
FROM PROFESSOR
GROUP BY DEPTNO;

--학과 번호별 교수의 최대급여, 최소급여 조회
SELECT DEPTNO ,MAX(SAL),MIN(SAL) 
FROM PROFESSOR
GROUP BY DEPTNO;

--학생의 학과와 학년을 기준으로 그룹하여 학년별 인원수의 평균체중을 구하고 반올림처리하여라
SELECT COUNT(*) ,ROUND(AVG(WEIGHT)) 
FROM STUDENT
GROUP BY GRADE,DEPTNO;

SELECT *
FROM STUDENT s ;

--학생의 생년월일 (BIRTHDATE)를 기준으로 탄생 계절별 인원수 구하기 Q는 분기
SELECT 
--		STUDNO,BIRTHDATE,
--		TO_CHAR(BIRTHDATE,'MM'),
--		TO_CHAR(BIRTHDATE,'Q'),
--		TO_CHAR(ADD_MONTHS(BIRTHDATE,-2),'Q') A,
		CASE TO_CHAR(ADD_MONTHS(BIRTHDATE,-2),'Q') 
		WHEN '1' THEN '봄'
		WHEN '2' THEN '여름'
		WHEN '3' THEN '가을'
		WHEN '4' THEN '겨울'
		END SEASON
		,COUNT(*) 
FROM STUDENT 
GROUP BY TO_CHAR(ADD_MONTHS(BIRTHDATE, -2),'Q')
ORDER BY TO_CHAR(ADD_MONTHS(BIRTHDATE, -2),'Q');

SELECT A ,COUNT(*) FROM( --밖에 있는게 메인 커리
SELECT TO_CHAR(ADD_MONTHS(BIRTHDATE, -2 ),'Q') A --이거를 컬럼으로 만들었다 안에있는게 서브커리
FROM STUDENT
)
GROUP BY A;

--ROLLUP:부분합 , 축 한방향
--CUBE:부분합, 양축
SELECT DEPTNO ,"POSITION" ,COUNT(*)
FROM PROFESSOR
GROUP BY DEPTNO ,"POSITION" 
UNION 
SELECT DEPTNO,NULL,COUNT(*)--여기서 널값은 포지션을 맞춰주는거 
FROM PROFESSOR 
GROUP BY DEPTNO
UNION
SELECT NULL,NULL,COUNT(*)
FROM PROFESSOR
ORDER BY 2;

SELECT DEPTNO ,"POSITION", COUNT(*) 
FROM PROFESSOR
GROUP BY ROLLUP(DEPTNO ,"POSITION")
ORDER BY 1,2;

SELECT DEPTNO ,"POSITION", COUNT(*) 
FROM PROFESSOR
GROUP BY CUBE(DEPTNO ,"POSITION")
ORDER BY 1,2;


SELECT DEPTNO ,GRADE ,COUNT(*),GROUPING(DEPTNO),GROUPING(GRADE) --이 칼럼을 썻냐 안썻냐 썻으면 0 안쓰면 1로 나옴 
FROM STUDENT
GROUP BY CUBE(DEPTNO ,GRADE)
ORDER BY 1,2;

--학생수가 4명이상인 학년에 대해 학생 평균 신장과 체중을 조회
SELECT GRADE ,COUNT(*) 
FROM STUDENT
WHERE DEPTNO =101
GROUP BY GRADE
HAVING COUNT(*) >=2
ORDER BY 1;

--오류내기
SELECT GRADE ,COUNT(*) 
FROM STUDENT
WHERE DEPTNO =101
GROUP BY GRADE
HAVING COUNT(STUDNO) >=2
ORDER BY GRADE;

--FROM>WHERE>GROUP>HAVING>SELECT>ORDER 순

--101번학과가 아닌 학생들의 인원수를 WHGHL
SELECT DEPTNO ,COUNT(*) 
FROM STUDENT
WHERE DEPTNO != 101
GROUP BY DEPTNO 
--HAVING DEPTNO;

--학과별 학생의 평균 몸무게 중 최대값을 구하여라.
SELECT MAX(DEPTNO) , MAX(AVG(WEIGHT)) --맞추기 위해서 DEPTNO에도 맥스를 붙임
FROM STUDENT
GROUP BY DEPTNO;



